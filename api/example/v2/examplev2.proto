syntax = 'proto3';
package api.example.v2;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/BobrePatre/ProjectTemplate/pkg/go/api/example/v2";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Example API",
    version: "v2"
  },
  security_definitions: {
    security: {
      key: "BearerAuth",
      value: {
        type: TYPE_OAUTH2
        flow: FLOW_ACCESS_CODE
        authorization_url: "https://keycloak.example.com/auth/realms/yourrealm/protocol/openid-connect/auth",
        token_url: "https://keycloak.example.com/auth/realms/yourrealm/protocol/openid-connect/token",

        scopes: {
          scope: {
            key: "openid",
            value: "OpenID Connect"
          },
          scope: {
            key: "email",
            value: "Email"
          },
          scope: {
            key: "profile",
            value: "Profile"
          }
        }
      }
    }
  },
};

service ExampleService {
  rpc Example(ExampleRequest) returns (ExampleResponse) {
    option (google.api.http) = {
      post: "/grpc/v2/example"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {key: "BearerAuth"}
      }
    };
  }
}

message ExampleRequest {
  string title = 1;
  string description = 2;
  string body = 3;
}

message ExampleResponse {
  string title = 1;
  string description = 2;
  string body = 3;
}
